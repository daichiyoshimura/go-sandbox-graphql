// Code generated by ent, DO NOT EDIT.

package ent

import (
	"sandbox-gql/ent/schema"
	"sandbox-gql/ent/todo"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	todoFields := schema.Todo{}.Fields()
	_ = todoFields
	// todoDescEmail is the schema descriptor for email field.
	todoDescEmail := todoFields[1].Descriptor()
	// todo.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	todo.EmailValidator = func() func(string) error {
		validators := todoDescEmail.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(email string) error {
			for _, fn := range fns {
				if err := fn(email); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// todoDescDone is the schema descriptor for done field.
	todoDescDone := todoFields[2].Descriptor()
	// todo.DefaultDone holds the default value on creation for the done field.
	todo.DefaultDone = todoDescDone.Default.(bool)
}
