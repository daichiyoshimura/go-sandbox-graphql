directive @goField(forceResolver: Boolean, name: String, omittable: Boolean) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION
directive @goModel(model: String, models: [String!], forceGenerate: Boolean) on OBJECT | INPUT_OBJECT | SCALAR | ENUM | INTERFACE | UNION
type Account implements Node {
  id: ID!
  name: String!
  email: String!
  createdAt: Time!
  updatedAt: Time!
  items: [Item!]
}
"""
Ordering options for Account connections
"""
input AccountOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order Accounts.
  """
  field: AccountOrderField!
}
"""
Properties by which Account connections can be ordered.
"""
enum AccountOrderField {
  NAME
  EMAIL
}
"""
AccountWhereInput is used for filtering Account objects.
Input was generated by ent.
"""
input AccountWhereInput {
  not: AccountWhereInput
  and: [AccountWhereInput!]
  or: [AccountWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  email field predicates
  """
  email: String
  emailNEQ: String
  emailIn: [String!]
  emailNotIn: [String!]
  emailGT: String
  emailGTE: String
  emailLT: String
  emailLTE: String
  emailContains: String
  emailHasPrefix: String
  emailHasSuffix: String
  emailEqualFold: String
  emailContainsFold: String
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """
  items edge predicates
  """
  hasItems: Boolean
  hasItemsWith: [ItemWhereInput!]
}
"""
CreateAccountInput is used for create Account object.
Input was generated by ent.
"""
input CreateAccountInput {
  name: String!
  email: String!
  createdAt: Time
  updatedAt: Time
  itemIDs: [ID!]
}
"""
CreateItemInput is used for create Item object.
Input was generated by ent.
"""
input CreateItemInput {
  name: String!
  price: Int
  createdAt: Time
  updatedAt: Time
  accountID: ID
}
"""
Define a Relay Cursor type:
https://relay.dev/graphql/connections.htm#sec-Cursor
"""
scalar Cursor
type Item implements Node {
  id: ID!
  name: String!
  price: Int!
  createdAt: Time!
  updatedAt: Time!
  account: Account
}
"""
ItemWhereInput is used for filtering Item objects.
Input was generated by ent.
"""
input ItemWhereInput {
  not: ItemWhereInput
  and: [ItemWhereInput!]
  or: [ItemWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  price field predicates
  """
  price: Int
  priceNEQ: Int
  priceIn: [Int!]
  priceNotIn: [Int!]
  priceGT: Int
  priceGTE: Int
  priceLT: Int
  priceLTE: Int
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """
  account edge predicates
  """
  hasAccount: Boolean
  hasAccountWith: [AccountWhereInput!]
}
"""
An object with an ID.
Follows the [Relay Global Object Identification Specification](https://relay.dev/graphql/objectidentification.htm)
"""
interface Node @goModel(model: "sandbox-gql/ent.Noder") {
  """
  The id of the object.
  """
  id: ID!
}
"""
Possible directions in which to order a list of items when provided an `orderBy` argument.
"""
enum OrderDirection {
  """
  Specifies an ascending order for a given `orderBy` argument.
  """
  ASC
  """
  Specifies a descending order for a given `orderBy` argument.
  """
  DESC
}
"""
Information about pagination in a connection.
https://relay.dev/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!
  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!
  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: Cursor
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: Cursor
}
type Query {
  """
  Fetches an object given its ID.
  """
  node(
    """
    ID of the object.
    """
    id: ID!
  ): Node
  """
  Lookup nodes by a list of IDs.
  """
  nodes(
    """
    The list of node IDs.
    """
    ids: [ID!]!
  ): [Node]!
  accounts: [Account!]!
  items: [Item!]!
}
"""
UpdateAccountInput is used for update Account object.
Input was generated by ent.
"""
input UpdateAccountInput {
  name: String
  email: String
  createdAt: Time
  updatedAt: Time
  addItemIDs: [ID!]
  removeItemIDs: [ID!]
  clearItems: Boolean
}
"""
UpdateItemInput is used for update Item object.
Input was generated by ent.
"""
input UpdateItemInput {
  name: String
  price: Int
  createdAt: Time
  updatedAt: Time
  accountID: ID
  clearAccount: Boolean
}
